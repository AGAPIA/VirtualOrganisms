How to Build:
=============

On Linux: use make from SelfAssemblingTreeSimulator/SelfAssemblingTreeSimulator
On Windows: You can use visual studio by openening SelfAssemblingTreeSimulator/SelfAssemblingTreeSimulator.sln

###
Note: If you load your model from a file but you want a number of cols/rows > 10 as the one in the examples, you'll have to modify the code in Utils.h too (MAX_COLS and MAX_ROWS variables).


How to switch between 247e and TC
==================================
Default model is TC. If you want TC only do not read below in this section.
If you want to switch do the followings:
- useEModel=1 in config.ini
- In code, go to Utils.h, set #define RUNMODE DIRECTIONAL_MODE instead of #define RUNMODE LEFTRIGHTONLY_MODE
- set the right expressions for rows and columns:  i.e. variables exprForRows and exprForCols in config.ini (you can see a commented examples).
- In Utils.h, redefine MAX_ROWS and MAX_COLS accordingly. I use 20 for both to see somthing...
- In Config.ini set the file to load the initial model from fileToInitializeFrom=in_dir.txt (or any other similar file you want to run on).
- Recompile

How to Execute:
===============
A. Open config.ini which is self descriptive for different options/user configurations
B. See below explanations and on screen messages

///////////////////////////////

Manual for step by step simulation from file.

In the input file give one of the following commands:
E							// Simulates g_simulationTicksForDataFlowEstimation ticks (Variable defiend in config.ini)
R							// Reorganize
S row column R				//  Removes a source. E.g. S 2 4 R => removes source located at row 2 column 4
S row column M newPower		// Modifies the source located at row column to have a new specified power
S row column A power		// Adds a source with the specified location and power 
P							// Prints current board

You can see the output of the execution in  in results.txt

Others, not so important options when simulating for a file:
O							// Reorganize and run g_simulationTicksForDataFlowEstimation - to see how it affects the flow
Q							// exit
U							// Undo
S fileName					// Saves the current board in a file for further debugging

///////////////////


